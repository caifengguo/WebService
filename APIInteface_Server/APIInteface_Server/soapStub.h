/* soapStub.h
   Generated by gSOAP 2.8.22 from APIINTEFACE.H

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20822
# error "GSOAP VERSION 20822 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns__startModelResponse
#define SOAP_TYPE_ns__startModelResponse (9)
/* ns:startModelResponse */
struct ns__startModelResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 9; } /* = unique type id SOAP_TYPE_ns__startModelResponse */
};
#endif

#ifndef SOAP_TYPE_ns__startModel
#define SOAP_TYPE_ns__startModel (10)
/* ns:startModel */
struct ns__startModel
{
public:
	int soap_type() const { return 10; } /* = unique type id SOAP_TYPE_ns__startModel */
};
#endif

#ifndef SOAP_TYPE_ns__endModelResponse
#define SOAP_TYPE_ns__endModelResponse (12)
/* ns:endModelResponse */
struct ns__endModelResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_ns__endModelResponse */
};
#endif

#ifndef SOAP_TYPE_ns__endModel
#define SOAP_TYPE_ns__endModel (13)
/* ns:endModel */
struct ns__endModel
{
public:
	int soap_type() const { return 13; } /* = unique type id SOAP_TYPE_ns__endModel */
};
#endif

#ifndef SOAP_TYPE_ns__startBdResponse
#define SOAP_TYPE_ns__startBdResponse (15)
/* ns:startBdResponse */
struct ns__startBdResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 15; } /* = unique type id SOAP_TYPE_ns__startBdResponse */
};
#endif

#ifndef SOAP_TYPE_ns__startBd
#define SOAP_TYPE_ns__startBd (16)
/* ns:startBd */
struct ns__startBd
{
public:
	int soap_type() const { return 16; } /* = unique type id SOAP_TYPE_ns__startBd */
};
#endif

#ifndef SOAP_TYPE_ns__endBdResponse
#define SOAP_TYPE_ns__endBdResponse (18)
/* ns:endBdResponse */
struct ns__endBdResponse
{
public:
	int *result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
public:
	int soap_type() const { return 18; } /* = unique type id SOAP_TYPE_ns__endBdResponse */
};
#endif

#ifndef SOAP_TYPE_ns__endBd
#define SOAP_TYPE_ns__endBd (19)
/* ns:endBd */
struct ns__endBd
{
public:
	int soap_type() const { return 19; } /* = unique type id SOAP_TYPE_ns__endBd */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (20)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 20; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (21)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (23)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (26)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 26; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (27)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 27; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
